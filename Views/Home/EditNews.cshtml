@model Practice2.Models.News

@{
    ViewBag.Title = "Sửa tin tức";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <label class="control-label col-md-2">Loại tin tức</label>
            <div class="col-md-10">
                <select name="idType" class="form-control">
                    @foreach (var i in new Practice2.Models.ManageNewsEntities().TypeNews.ToList())
                    {
                        <option value="@i.ID">@i.typeName</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.idType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tiêu đề</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Ngày đăng</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Nội dung</label>
            <div class="col-md-10">
                <textarea class="form-control" name="Description" id="input-txa">@Model.Description</textarea>

                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Hình ảnh</label>
            <div class="col-md-10 d-flex gap-1 align-items-baseline">
                @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                <a href="#" class="btn btn-info btn-sm mt-1" onclick="BrowseServer()">Thêm File</a>
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Hiển thị</label>
            <div class="col-md-10">
                <input type="checkbox" value="true" name="isDisplay" @Html.Raw(Model.isDisplay == true ? "checked" : "") />
                @Html.ValidationMessageFor(model => model.isDisplay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-success mt-2" />
            </div>
        </div>
    </div>
}

@section js{
    <script>
            CKEDITOR.replace("input-txa")

                const BrowseServer = () => {
                    var finder = new CKFinder();
            finder.selectActionFunction = TagUrl;
            finder.popup();
                }

                const TagUrl = (url) => {
                $("input[name=ImagePath]").val(url);
                }
    </script>
}
